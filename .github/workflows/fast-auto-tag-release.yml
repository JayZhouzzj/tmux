name: Fast Auto Tag and Release (Testing)

on:
  workflow_dispatch:
  schedule:
    - cron: "45 1 * * *"
    - cron: "15 9 * * *"
    - cron: "30 17 * * *"

jobs:
  release:
    runs-on: "ubuntu-latest"
    # env:
    #   JEST_VERBOSE: ${{ secrets.JEST_VERBOSE }}

    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v2.3.4"
        with:
          lfs: true
          fetch-depth: 0

      - id: "yarn-cache"
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: "actions/cache@v2.1.6"
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      # - run: "yarn install --frozen-lockfile"
      # - run: "yarn lint"
      # - run: "yarn build"
      # - run: "yarn jest --env=node --colors --forceExit"

      - name: "Remove -next prefix from version in configure.ac"
        run: sed -i '/AC_INIT(\[tmux\], /s/next-//' configure.ac
      - name: "Extract version numer"
        run: |
          VERSION=$(grep 'AC_INIT(\[tmux\],' configure.ac | sed -n 's/.*AC_INIT(\[tmux\], \([0-9]*\.[0-9]*\)).*/\1/p')
          echo "Current version: $VERSION"
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      # - run: "sh autogen.sh"
      # - run: "./configure"
      - run: "sudo apt-get update -qq"
      - run: "sudo apt-get -y install bison \
          autotools-dev \
          libncurses5-dev \
          libevent-dev \
          pkg-config \
          libutempter-dev \
          build-essential"
      - run: "sh .github/travis/before-install.sh"
      - run: "sh .github/travis/build.sh"
      - run: "make dist"

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          files: |
            *.tar.gz
        id: "automatic_releases"

      # marvinpinto/action-keybase-notifications
      # marvinpinto/action-automatic-releases
      # - name: "Automatically mirror release artifacts"
      #   env:
      #     GITHUB_SUPER_TOKEN: ${{ secrets.GITHUB_SUPER_TOKEN }}
      #   run: |
      #     ./scripts/mirror-actions.sh "$AUTOMATIC_RELEASES_TAG"

      # - uses: "marvinpinto/action-keybase-notifications@latest"
      #   if: always()
      #   with:
      #     job_status: ${{ job.status }}
      #     opensentinel_token: ${{ secrets.OSL_TOKEN }}

      - name: "Update next version number"
        run: |
          IFS='.' read -ra VER <<< "$VERSION"
          NEW_MINOR=$((VER[1]+1))
          NEW_VERSION="${VER[0]}.$NEW_MINOR"

          # Write back to file
          sed -i "s/AC_INIT(\[tmux\], $VERSION)/AC_INIT([tmux], next-$NEW_VERSION)/" configure.ac
          git add configure.ac
          git commit -m "Bump version to next-$NEW_VERSION"
          git push origin HEAD
